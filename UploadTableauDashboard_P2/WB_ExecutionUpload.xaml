<Activity mc:Ignorable="sap sap2010 sads" x:Class="WB_ExecutionUpload"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argInDBonnectionString" Type="InArgument(x:String)" />
    <x:Property Name="In_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="argInExecutionID" Type="InArgument(x:String)" />
    <x:Property Name="argInFTPPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="argInFTPUserName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>WB_ExecutionUpload_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Desciption: Upload the updated Tableau workbooks to Server if the execution status is 'Approves' and update the Execution status on DB. Clean up old Files&#xA;Technical details: &#xA;Read paths from config.&#xA;FTP activities to to updload and delete workbooks to WinSCP.&#xA;Dev Details: Created by Shivani Karla &#xA;Creatde Date : 7th August 2020" DisplayName="WB_ExecutionUpload" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="vDTDiscardData" />
      <Variable x:TypeArguments="x:Int32" Name="vIntApprovedItems" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDTExecutionData" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="vDBConnection" />
      <Variable x:TypeArguments="x:String" Name="vStrExecutionID" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_3">
        <Sequence DisplayName="Log Discard" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow -W1" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Log\Log.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Step">Phase2- Upload</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Started Phase 2- Upload WB to WinSCP</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">[in_Config("Unix_UploadPath").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBonnectionString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Assign Discard Init" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[vDTDiscardData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[new datatable]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_2">
            <Sequence DisplayName="Connect and Execute Query" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Connect to DB&quot;]" />
              <ui:DatabaseConnect DatabaseConnection="[vDBConnection]" DisplayName="Connect Execution DB" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.SqlClient" ConnectionString="[argInDBonnectionString]" />
              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[vDTExecutionData]" DisplayName="Execute ID Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[In_Config(&quot;Execution_ID_Query&quot;).ToString]">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
              </ui:ExecuteQuery>
              <ui:DatabaseDisconnect DatabaseConnection="[vDBConnection]" DisplayName="Disconnect ID" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Disconnect DB&quot;]" />
              <Assign DisplayName="Assign - get ExecutionID" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[vStrExecutionID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[if(vDTExecutionData.Rows.Count&gt;0,vDTExecutionData.Rows(0).Item("Execution_ID").Tostring,"-1")]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[vDTExecutionData.Select(&quot;[Execution_Status]='Approved'&quot;).Length&gt;0]" DisplayName="If Approved" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Assign DisplayName="Assign - Get approved Count" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[vIntApprovedItems]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[vDTExecutionData.Select("[Execution_Status]='Approved'").CopyToDatatable.Rows.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign - Get approved Init" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[vIntApprovedItems]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Execution ID &quot;+vStrExecutionID+ &quot; and Approved Items &quot;+vIntApprovedItems.ToString]" />
            </Sequence>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID10" Condition="[In_Config(&quot;IsOperator_Required&quot;).ToString.Trim.ToLower=&quot;yes&quot;]" DisplayName="Operator Flow" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                <FlowDecision.True>
                  <FlowDecision x:Name="__ReferenceID4" Condition="[vIntApprovedItems= vDTExecutionData.Rows.Count]" DisplayName="Approved" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow- W2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Step">Dashboard Upload</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Dashboards are approved by the approver. Upload the tableau dashboards to UNIX</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">[in_Config("Unix_UploadPath").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[vStrExecutionID]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBonnectionString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UploadWinSCP workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="UploadTableauDashboard_P2\UploadWinSCP.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argInFTPUserName">[argInFTPUserName]</InArgument>
                                <InArgument x:TypeArguments="ss:SecureString" x:Key="argInFTPPassword">[argInFTPPassword]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argInExecution_ID">[argInExecutionID]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[argInDBonnectionString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                <Sequence DisplayName="Update Log Final" sap2010:WorkflowViewState.IdRef="Sequence_1">
                                  <ui:DatabaseConnect DatabaseConnection="[vDBConnection]" DisplayName="Connect Execution DB" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.SqlClient" ConnectionString="[argInDBonnectionString]" />
                                  <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="update UI_Path_Trigger set flag=0">
                                    <ui:ExecuteNonQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteNonQuery.Parameters>
                                  </ui:ExecuteNonQuery>
                                  <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="[&quot;update UI_Path_Execution_Status_Program set Execution_Status='Processed' where Execution_ID=&quot;+vStrExecutionID]">
                                    <ui:ExecuteNonQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteNonQuery.Parameters>
                                  </ui:ExecuteNonQuery>
                                  <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_3" Sql="Update [dbo].[UI_Path_Trigger] set Process_Phase='Phase1'">
                                    <ui:ExecuteNonQuery.Parameters>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:ExecuteNonQuery.Parameters>
                                  </ui:ExecuteNonQuery>
                                  <ui:DatabaseDisconnect DatabaseConnection="[vDBConnection]" DisplayName="Disconnect" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_2" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log - W3" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Step">After Tableau Dashboard upload</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Bot execution completed</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">Bot execution completed successfully</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[vStrExecutionID]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBonnectionString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <If Condition="[In_Config(&quot;IsOperator_Required&quot;).ToString.Trim.ToLower=&quot;yes&quot;]" sap2010:WorkflowViewState.IdRef="If_4">
                                    <If.Then>
                                      <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;SenderEmailID&quot;).ToString]" Body="[&quot;&lt;p&gt;Hi Team,&lt;/p&gt;&lt;p&gt;Dashboards have been successfully uploaded to Unix and the corresponding touch file Is located on the location:&lt;/p&gt; &lt;p&gt;FilePath&lt;/p&gt;&lt;p&gt;Thanks,&lt;br /&gt; Bot&lt;/p&gt;&lt;p&gt;&lt;strong&gt;This Is a bot-generated email. Kindly do not reply.&lt;/strong&gt;&lt;/p&gt;&quot;.Replace(&quot;FilePath&quot;,In_Config(&quot;TouchFile_UnixPath&quot;).ToString)]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="[&quot;Platypus-P Dashboard Upload - &quot;+  vStrExecutionID]" To="[In_Config(&quot;Operator_MailID&quot;).ToString]">
                                        <ui:SendOutlookMail.Files>
                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                        </ui:SendOutlookMail.Files>
                                      </ui:SendOutlookMail>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowDecision x:Name="__ReferenceID6" Condition="[vDTExecutionData.Select(&quot;[Execution_Status]='Discard'&quot;).Length&gt;0]" DisplayName="Discard" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow- W5" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Step">Dashboard Upload</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Business Exception</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Dashboard updates are rejected by approver. Cannot proceed to upload the dashboards to the UNIX.</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue" />
                                <InArgument x:TypeArguments="x:String" x:Key="in_IsException">Yes</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[vStrExecutionID]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBonnectionString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                <Throw DisplayName="Throw - rejected" Exception="[new BusinessRuleException(&quot;Dashboard Update Rejected by the Approver&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow -W4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Step">Phase2- Upload</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Completed Phase 2- Upload WB to WinSCP</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">[in_Config("Unix_UploadPath").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[vStrExecutionID]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBonnectionString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowDecision.True>
                <FlowDecision.False>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <sads:DebugSymbol.Symbol>d35DOlxVc2Vyc1xzdWt1bWFyMVxEb2N1bWVudHNcVWlQYXRoXFJQQS1QbGF0eXB1cy1VaVBhdGhfUFxSUEEtUGxhdHlwdXMtVWlQYXRoXFVwbG9hZFRhYmxlYXVEYXNoYm9hcmRfUDJcV0JfRXhlY3V0aW9uVXBsb2FkLnhhbWx9VgO+Ag8CAQFgCXgUAwGaAXsNpAEYAgFwpgFApgGUAQIBbrwBHcQBNQIBYscBIfEBLAIBMagBQ6gBdQIBMPkBR/kBmAECAS+UAh2iAjUCASD8AR2KAjUCARONAiGNAtIBAgERqwEZuQExAgECYQtvIwMBnwFwC3cUAwGbAXwPfJwBAwGXAX0PffIBAwGRAX4PggEhAwGKAYMBD4MBoAEDAYcBhAEPhAGcAQMBhAGFAQ+MARgDAYABjQEPogEUAgF2owEPowHpAQIBccEBYsEBdAIBbMIBaMIBgAECAWq+AXS+AX8CAWjAAWjAAXoCAWa8AdEBvAH+AQIBZb8BYb8BcwIBY8gBI8gBhgICAVzJASPNATgCAVjOASPSATgCAVPTASPXATgCAU/YASPYAbEBAgFM2QEj5wE7AgE+6AEj8AEoAgEynAJfnAJwAgEtmQJcmQKDAQIBK5YCWJYCZgIBKpcCYZcCbgIBKZgCYJgChgECASidAmadAn4CASabAnSbAn8CASSaAl+aAmECASOUAswBlALaAQIBIp8CI58CUgIBIYQCX4QCcAIBHv4BWP4BaAIBHf8BYf8BcwIBHIACYIACwAECARuFAmaFAn4CARmDAnSDAn8CAReCAl+CAmICARb8AcwB/AHaAQIBFYcCI4cCUgIBFI0CUY0CpQECARKzAVuzAWwCAQ+wAViwAX8CAQ2tAVStAWQCAQyuAV2uAWoCAQuvAVyvAaoBAgEKtAFitAF6AgEIsgFwsgF7AgEGsQFbsQFdAgEFqwHIAasB1gECAQS2AR+2AU4CAQNpTWlfAwGsAWZKZnEDAaoBY0ZjVAMBqQFkT2RcAwGoAWVOZXIDAacBalRqbAMBpQFoYmhtAwGjAWdNZ08DAaIBYboBYcgBAwGhAWwRbEADAaABdTp1SQMBngFyO3JLAwGcAXx8fJkBAwGZAXxtfHMDAZgBfawBfcMBAwGWAX3VAX3vAQMBlAF9Nn1HAwGSAX62AX7HAQMBjwF+bX6BAQMBjQF+/QF+swIDAYsBgwE5gwFKAwGIAYQBfIQBmQEDAYYBhAFthAFzAwGFAYoBOooBnAEDAYMBhwE7hwFMAwGBAY0BHY0BbwIBd48BE5YBHAIBfJkBE6ABHAIBeKMBfKMB5gECAXOjAW2jAXMCAXLIAcAByAHXAQIBYcgB6QHIAYMCAgFfyAFKyAFbAgFdyQHKAckB2wECAVrJAZQCyQG3AgIBWc4BygHOAdsBAgFWzgGUAs4BkAMCAVTTAcoB0wHbAQIBUdMBlALTAc8CAgFQ2AFN2AFeAgFN4QFl4QF2AgFK3gFi3gGGAQIBSdsBXtsBfAIBSNwBZ9wBdAIBR90BZt0BfQIBRuIBbOIBhAECAUTgAXrgAYUBAgFC3wFl3wFnAgFB2QHKAdkB2AECAUDkASnkAVgCAT/oATHoAYUBAgEz6gEn7gE8AgE1lAE9lAGSAQIBf5EBPpEBUQIBfZ4BPZ4BPgIBe5sBPpsBUQIBeeoBtQbqAegGAgE86gGMAeoBvQECATrqAcMB6gHqBAIBOOoB8QXqAbEGAgE2</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_1" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_2" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteNonQuery_1" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteNonQuery_2" sap:VirtualizedContainerService.HintSize="464,88" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_3" sap:VirtualizedContainerService.HintSize="464,88" />
      <sap2010:ViewStateData Id="DatabaseDisconnect_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="464,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_1" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,293">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,1044">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">10,564.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">10,494.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">110,545.5 110,564.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">10,254.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">110,305.5 110,494.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">220,479</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">220,404.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,455.5 320,479</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">430,394.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">405,306.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">405,350 320,350 320,404.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">475,350 530,350 530,394.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,236.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">265,280 210,280</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">335,280 440,280 440,306.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="81,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">439.5,166.5</av:Point>
            <av:Size x:Key="ShapeSize">81,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">439.5,210 300,210 300,236.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">520.5,210 640.5,210 640.5,520 210,520</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,94.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">410,120 480,120 480,166.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,24.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,75.5 310,94.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1083,754">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">60,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,50 210,50</av:PointCollection>
            <x:Double x:Key="Width">1068.8571428571431</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Double x:Key="Height">615.5</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WB_ExecutionUpload_1" sap:VirtualizedContainerService.HintSize="1123,834" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>