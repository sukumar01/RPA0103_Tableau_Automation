<Activity mc:Ignorable="sap sap2010 sads" x:Class="Dispatcher"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/ftp"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="argOutArrTableauWbs" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="argOutProcessPhase" Type="OutArgument(x:String)" />
    <x:Property Name="argInExecutionID" Type="InArgument(x:String)" />
    <x:Property Name="argOutBoolTrigger" Type="OutArgument(x:Boolean)" />
    <x:Property Name="argInDBConnectionString" Type="InArgument(x:String)" />
    <x:Property Name="argInFTPPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="argInFTPUserName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Dispatcher_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Desciption: Check the Bot trigger. If true, Add the transaction items to the queue. In case previous execution pending on DB send an exception email. &#xA;&#xA;Technical details: &#xA;Read paths from config.&#xA;Connect to FTP through assets credentials. &#xA;Add each main steps to DB as log message.&#xA;&#xA;Dev Details: Created by Shivani Karla &#xA;Creatde Date : 7th August 2020" DisplayName="Dispatcher" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="vDBConnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtTrigger" />
      <Variable x:TypeArguments="x:String" Name="vStrExecutionID" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new list(of string)]" Name="vListOldItems" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_11">
        <Sequence DisplayName="Connect and Execute Query" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-1" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Log\Log.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Step">
                <Literal x:TypeArguments="x:String">Dispatcher</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">
                <Literal x:TypeArguments="x:String">Informational</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">
                <Literal x:TypeArguments="x:String">Started Distpatcher</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="argInExecutionID +&quot; is the current execution&quot;" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_IsException">
                <Literal x:TypeArguments="x:String">No</Literal>
              </InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="In_Config" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="argInExecutionID" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="argInDBConnectionString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:DatabaseConnect DatabaseConnection="[vDBConnection]" DisplayName="Connect Dispatcher DB" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.SqlClient" ConnectionString="[argInDBConnectionString]" />
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[In_Config(&quot;BotTrigger_Query&quot;).ToString]" />
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[vDtTrigger]" DisplayName="Execute Trigger Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[In_Config(&quot;BotTrigger_Query&quot;).ToString]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:DatabaseDisconnect DatabaseConnection="[vDBConnection]" DisplayName="Disconnect Trigger" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
          <Assign DisplayName="Assign Phase" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[argOutProcessPhase]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[vDtTrigger.Rows(0).Item("Process_Phase").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Init Arr" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[argOutArrTableauWbs]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[new list(of string)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID1" Condition="[vDtTrigger.Rows(0).Item(&quot;Flag&quot;).ToString=&quot;True&quot;]" DisplayName="Triggger?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-3" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Step">Uipath Trigger Check</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Trigger: True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                    <Assign DisplayName="Assign Trigger True" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[argOutBoolTrigger]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID15" Condition="[In_Config(&quot;IsOperator_Required&quot;).ToString.Trim.ToLower=&quot;yes&quot;]" DisplayName="Operator Flow" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                            <Sequence DisplayName="Check Previous Run Status" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="vDT_ExecutionData" />
                              </Sequence.Variables>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-16" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Step">Process Operator Check</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Operator Process: Yes</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">Yes</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Step">Prior Execution Check</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Check Previous Execution Status</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">Execution Status</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:DatabaseConnect DatabaseConnection="[vDBConnection]" DisplayName="Connect Dispatcher DB" sap2010:WorkflowViewState.IdRef="DatabaseConnect_3" ProviderName="System.Data.SqlClient" ConnectionString="[argInDBConnectionString]" />
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[In_Config(&quot;Execution_ID_Query&quot;).ToString]" />
                              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[vDT_ExecutionData]" DisplayName="Execute Trigger Query" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[In_Config(&quot;Execution_ID_Query&quot;).ToString]">
                                <ui:ExecuteQuery.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:ExecuteQuery.Parameters>
                              </ui:ExecuteQuery>
                              <ui:DatabaseDisconnect DatabaseConnection="[vDBConnection]" DisplayName="Disconnect Trigger" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_2" />
                              <If Condition="[vDT_ExecutionData.Select(&quot;[Execution_Status]='Pending with Approver'&quot;).Length&gt;0]" DisplayName="If Pending with Approver" sap2010:WorkflowViewState.IdRef="If_4">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <Assign DisplayName="Assign Execution ID" sap2010:WorkflowViewState.IdRef="Assign_7">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[vStrExecutionID]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[vDT_ExecutionData.Select("[Execution_Status]='Pending with Approver'").CopyToDataTable.Rows(0).Item("Execution_ID").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-7" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Step">Prior Execution Pending</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Execution Status- Pending</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">[vStrExecutionID]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;SenderEmailID&quot;).ToString]" Body="[&quot;&lt;p&gt;Hi Team,&lt;/p&gt;&lt;p&gt;Some of the dashboards are yet to be processed. Please process the entire queue&amp;nbsp;StrID to proceed further.&lt;/p&gt;&lt;p&gt;Thanks, &lt;br /&gt; Bot&lt;/p&gt;&lt;p&gt;&lt;strong&gt;This Is a bot generated email. Kindly do not reply.&lt;/strong&gt;&lt;/p&gt;&quot;.Replace(&quot;StrID&quot;,vStrExecutionID)]" DisplayName="Pending Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" IsBodyHtml="True" IsDraft="False" Subject="Tableau Dashboard_ParameterUpdate - Approval Pending " To="[In_Config(&quot;Operator_MailID&quot;).ToString]">
                                      <ui:SendOutlookMail.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                      </ui:SendOutlookMail.Files>
                                    </ui:SendOutlookMail>
                                    <Throw DisplayName="Throw- Pending" Exception="[new BusinessRuleException(&quot;Some of the dashboards are yet to processed&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID7" Condition="[argOutProcessPhase.ToString.Trim.ToLower=&quot;phase1&quot;.ToString.Trim.ToLower]" DisplayName="Flow Phase" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                <FlowDecision.True>
                                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Step">Process Phase Check</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Process Phase: 1</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">1</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_25">
                                        <Sequence DisplayName="Folder Cleanup" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="vBoolLocalWB" />
                                            <Variable x:TypeArguments="x:Boolean" Name="vBoolLocalImg" />
                                            <Variable x:TypeArguments="x:Boolean" Name="vBoolZipExists" />
                                          </Sequence.Variables>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Step">Folder Cleanup</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Started Folder Cleanup</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue" />
                                              <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:PathExists DisplayName="Path WB Exists" Exists="[vBoolLocalWB]" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString+ In_Config(&quot;LocalFolderName&quot;).ToString]" PathType="Folder" />
                                          <If Condition="[vBoolLocalWB]" DisplayName="If WB Exists" sap2010:WorkflowViewState.IdRef="If_8">
                                            <If.Then>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each WB" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[directory.getfiles(In_Config(&quot;Local_WB_Folder&quot;).ToString)]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="x:Object">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                                      </ActivityAction.Argument>
                                                      <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File" sap2010:WorkflowViewState.IdRef="Delete_12" Path="[file.ToString]" />
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                </ui:ForEach>
                                                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete WB" sap2010:WorkflowViewState.IdRef="Delete_13" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString]" />
                                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="WB Create Folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString+ In_Config(&quot;LocalFolderName&quot;).ToString]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString+ In_Config(&quot;LocalFolderName&quot;).ToString]" />
                                            </If.Else>
                                          </If>
                                          <ui:PathExists DisplayName="Path WBUpdate  Exists" Exists="[vBoolLocalWB]" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[in_Config(&quot;Local_WB_Folder&quot;).ToString+ in_Config(&quot;LocalUpdateFolder&quot;).ToString]" PathType="Folder" />
                                          <If Condition="[vBoolLocalWB]" DisplayName="If WBUpdate Exists" sap2010:WorkflowViewState.IdRef="If_11">
                                            <If.Then>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each WB" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[directory.getfiles(in_Config(&quot;Local_WB_Folder&quot;).ToString+ in_Config(&quot;LocalUpdateFolder&quot;).ToString)]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="x:Object">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                                      </ActivityAction.Argument>
                                                      <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete File" sap2010:WorkflowViewState.IdRef="Delete_16" Path="[file.ToString]" />
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                </ui:ForEach>
                                                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete WB" sap2010:WorkflowViewState.IdRef="Delete_17" Path="[in_Config(&quot;Local_WB_Folder&quot;).ToString+ in_Config(&quot;LocalUpdateFolder&quot;).ToString]" />
                                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="WBUpdate Create Folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[in_Config(&quot;Local_WB_Folder&quot;).ToString+ in_Config(&quot;LocalUpdateFolder&quot;).ToString]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Update Folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[in_Config(&quot;Local_WB_Folder&quot;).ToString+ in_Config(&quot;LocalUpdateFolder&quot;).ToString]" />
                                            </If.Else>
                                          </If>
                                          <ui:PathExists DisplayName="Path img Exists" Exists="[vBoolLocalImg]" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[In_Config(&quot;Local_ProgramID_Img_Path&quot;).ToString]" PathType="Folder" />
                                          <If Condition="[vBoolLocalImg]" DisplayName="If Img Exists" sap2010:WorkflowViewState.IdRef="If_9">
                                            <If.Then>
                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Img Each" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Directory.GetFiles(In_Config(&quot;Local_ProgramID_Img_Path&quot;).ToString)]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:Object">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="image" />
                                                    </ActivityAction.Argument>
                                                    <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete Img" sap2010:WorkflowViewState.IdRef="Delete_14" Path="[image.ToString]" />
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                            </If.Then>
                                            <If.Else>
                                              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[In_Config(&quot;Local_ProgramID_Img_Path&quot;).ToString]" />
                                            </If.Else>
                                          </If>
                                          <ui:PathExists DisplayName="Path Zip Exists" Exists="[vBoolZipExists]" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString+&quot;ProgramCode_Images.zip&quot;]" PathType="Folder" />
                                          <If Condition="[vBoolZipExists]" DisplayName="If Zip Exists " sap2010:WorkflowViewState.IdRef="If_10">
                                            <If.Then>
                                              <ui:Delete ContinueOnError="False" DisplayName="Zip File - Delete" sap2010:WorkflowViewState.IdRef="Delete_15" Path="[In_Config(&quot;Local_WB_Folder&quot;).ToString+&quot;ProgramCode_Images.zip&quot;]" />
                                            </If.Then>
                                          </If>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-5" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Step">Completed Folder Cleanup</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Completed Folder Cleanup</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">Completed Folder Cleanup</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                                            <Sequence DisplayName="Download FIles" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="sd:DataTable" Name="vDTPrograms" />
                                                <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="vElTableauQueue" />
                                              </Sequence.Variables>
                                              <p:WithFtpSession ClientCertificatePassword="{x:Null}" ClientCertificatePath="{x:Null}" ContinueOnError="False" DisplayName="With ftp session" Host="[In_Config(&quot;FTP_UNIX_Server&quot;).ToString]" sap2010:WorkflowViewState.IdRef="WithFtpSession_2" Password="[new System.Net.NetworkCredential(string.Empty, argInFTPPassword).Password]" Port="[cint(In_Config(&quot;FTP_UNIX_Port&quot;).ToString)]" UseSftp="True" Username="[argInFTPUserName]">
                                                <p:WithFtpSession.Body>
                                                  <ActivityAction x:TypeArguments="p:IFtpSession">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="p:IFtpSession" Name="FtpSession" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                      <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download FTP files" sap2010:WorkflowViewState.IdRef="DownloadFiles_2" LocalPath="[In_Config(&quot;Local_WB_Folder&quot;).ToString]" Overwrite="False" Recursive="False" RemotePath="[In_Config(&quot;TWB_UNIX_Path&quot;).ToString]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </p:WithFtpSession.Body>
                                              </p:WithFtpSession>
                                              <ui:DatabaseConnect DatabaseConnection="[vDBConnection]" DisplayName="Connect Distinct" sap2010:WorkflowViewState.IdRef="DatabaseConnect_4" ProviderName="System.Data.SqlClient" ConnectionString="[argInDBConnectionString]" />
                                              <ui:LogMessage DisplayName="Log Message -1" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[In_Config(&quot;Distinct_ProgramIDQuery&quot;).ToString]" />
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[vDTPrograms]" DisplayName="Execute Query Distinct" ExistingDbConnection="[vDBConnection]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[In_Config(&quot;Distinct_ProgramIDQuery&quot;).ToString]">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                              </ui:ExecuteQuery>
                                              <ui:DatabaseDisconnect DatabaseConnection="[vDBConnection]" DisplayName="Disconnect Distinct" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_3" />
                                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDTPrograms]" DisplayName="For Each Prograns Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                      <Assign DisplayName="AssignConfig Data" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Object">[In_Config(row.Item("Program").ToString)]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                              <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Tableau Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="[In_Config(&quot;OrchestratorQueueName&quot;).ToString]" Result="[vElTableauQueue]" />
                                              <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each Queue Item" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[vElTableauQueue]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="ui:QueueItem">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                      <AddToCollection x:TypeArguments="x:String" Collection="[vListOldItems]" DisplayName="Add To Collection- Queue " sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[item.SpecificContent(&quot;TableauWB&quot;).ToString]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each WB" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[Directory.GetFiles(In_Config(&quot;Local_WB_Folder&quot;).ToString+ In_Config(&quot;LocalFolderName&quot;).ToString+&quot;\&quot;).ToList]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:Object">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[vListOldItems.Contains(item.ToString)]" DisplayName="If New Item" sap2010:WorkflowViewState.IdRef="If_14">
                                                      <If.Then>
                                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[item.ToString+&quot; exists &quot;]" />
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[item.ToString+&quot; added &quot;]" />
                                                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add WB Queue Item" sap2010:WorkflowViewState.IdRef="AddQueueItem_4" Priority="Normal" QueueType="[In_Config(&quot;OrchestratorQueueName&quot;).ToString]">
                                                            <ui:AddQueueItem.ItemInformation>
                                                              <InArgument x:TypeArguments="x:String" x:Key="TableauWB">[item.ToString]</InArgument>
                                                            </ui:AddQueueItem.ItemInformation>
                                                          </ui:AddQueueItem>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                              </ui:ForEach>
                                              <Assign DisplayName="Assign WBs" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[argOutArrTableauWbs]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[Directory.GetFiles(In_Config("Local_WB_Folder").ToString+"Tableau_Workbooks\").ToList]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowDecision x:Name="__ReferenceID11" Condition="[argOutArrTableauWbs.Count&gt;0]" DisplayName="Workbooks" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                                <FlowDecision.True>
                                                  <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_26">
                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[argOutArrTableauWbs.Count.ToString+&quot; workbooks added to the queue&quot;]" />
                                                  </FlowStep>
                                                </FlowDecision.True>
                                                <FlowDecision.False>
                                                  <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_28">
                                                    <p:WithFtpSession ClientCertificatePassword="{x:Null}" ClientCertificatePath="{x:Null}" ContinueOnError="False" DisplayName="With ftp session" Host="[in_Config(&quot;FTP_UNIX_Server&quot;).ToString]" sap2010:WorkflowViewState.IdRef="WithFtpSession_3" Password="[new System.Net.NetworkCredential(string.Empty, argInFTPPassword).Password]" Port="[cint(In_Config(&quot;FTP_UNIX_Port&quot;).ToString)]" UseSftp="True" Username="[argInFTPUserName]">
                                                      <p:WithFtpSession.Body>
                                                        <ActivityAction x:TypeArguments="p:IFtpSession">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="p:IFtpSession" Name="FtpSession" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="scg:IEnumerable(p:FtpObjectInfo)" Name="vFTPWBCollection" />
                                                            </Sequence.Variables>
                                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-11" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_Step">Dispatcher Completed</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">No files within input folder</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">No input files</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                </InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                            <ui:CreateFile ContinueOnError="{x:Null}" DisplayName="Create File" sap2010:WorkflowViewState.IdRef="CreateFile_1" Name="success.touch" Path="[in_Config(&quot;Local_WB_Folder&quot;).tostring]" />
                                                            <ui:WriteTextFile DisplayName="Write Success Text File" FileName="[in_Config(&quot;Local_WB_Folder&quot;).tostring+&quot;Success.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="Success" />
                                                            <p:UploadFiles ContinueOnError="False" Create="False" DisplayName="Upload Sucess files-1" sap2010:WorkflowViewState.IdRef="UploadFiles_1" LocalPath="[in_Config(&quot;Local_WB_Folder&quot;).tostring+&quot;Success.txt&quot;]" Overwrite="True" Recursive="False" RemotePath="[in_Config(&quot;TouchFile_UnixPath&quot;).ToString]" />
                                                            <p:UploadFiles ContinueOnError="False" Create="False" DisplayName="Upload Sucess files-2" sap2010:WorkflowViewState.IdRef="UploadFiles_2" LocalPath="[in_Config(&quot;Local_WB_Folder&quot;).tostring+&quot;success.touch&quot;]" Overwrite="True" Recursive="False" RemotePath="[in_Config(&quot;Operators_Path&quot;).ToString]" />
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </p:WithFtpSession.Body>
                                                    </p:WithFtpSession>
                                                  </FlowStep>
                                                </FlowDecision.False>
                                              </FlowDecision>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.True>
                                <FlowDecision.False>
                                  <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-9" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Step">Process Phase Check</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Process Phase: 2</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">2</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WB_ExecutionUpload workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="UploadTableauDashboard_P2\WB_ExecutionUpload.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="argInDBonnectionString">[argInDBConnectionString]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[In_Config]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="argInExecutionID">[vStrExecutionID]</InArgument>
                                            <InArgument x:TypeArguments="ss:SecureString" x:Key="argInFTPPassword">[argInFTPPassword]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="argInFTPUserName">[argInFTPUserName]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_30">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-15" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Step">Process Operator Check</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">Informational</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">Operator Process: No</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">No</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_IsException">No</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[In_Config]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">[argInExecutionID]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">[argInDBConnectionString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <x:Reference>__ReferenceID0</x:Reference>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_29">
                <Sequence DisplayName="NoTrigger- End Flow" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log workflow-2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Log\Log.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Step">
                        <Literal x:TypeArguments="x:String">Uipath Trigger Check</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionType">
                        <Literal x:TypeArguments="x:String">Informational</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">
                        <Literal x:TypeArguments="x:String">Trigger: False</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_KeyValue">
                        <Literal x:TypeArguments="x:String">Trigger: False</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_IsException">
                        <Literal x:TypeArguments="x:String">No</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                        <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="In_Config" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ExecutionID">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="argInExecutionID" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_DBConnectionString">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="argInDBConnectionString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ProgramID">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Assign Trigger False" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[argOutBoolTrigger]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_17" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="314,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_1" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="464,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="464,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_3" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="ExecuteQuery_3" sap:VirtualizedContainerService.HintSize="464,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_2" sap:VirtualizedContainerService.HintSize="464,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_3" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,558">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_14" sap:VirtualizedContainerService.HintSize="561,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_7" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="222,328">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_5" sap:VirtualizedContainerService.HintSize="314,79">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="561,476">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_10" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_10" sap:VirtualizedContainerService.HintSize="314,194">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_17" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="CreateDirectory_7" sap:VirtualizedContainerService.HintSize="314,79">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="336,499">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_8" sap:VirtualizedContainerService.HintSize="314,79">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_8" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_14" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="287,194">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_6" sap:VirtualizedContainerService.HintSize="314,79" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_9" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_15" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DownloadFiles_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WithFtpSession_2" sap:VirtualizedContainerService.HintSize="691,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseConnect_4" sap:VirtualizedContainerService.HintSize="691,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="691,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_4" sap:VirtualizedContainerService.HintSize="691,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_3" sap:VirtualizedContainerService.HintSize="691,22" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="691,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="691,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="691,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddQueueItem_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="675,425">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_9" sap:VirtualizedContainerService.HintSize="691,559">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="691,60" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,814.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateFile_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UploadFiles_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="UploadFiles_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="336,517">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WithFtpSession_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,774.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">285,756.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">285,800 150,800 150,814.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">355,800 420,800</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,687</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,712.5 320,712.5 320,756.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,607</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">520,658 520,687</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">60,474.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">60,500 30,500 30,632.5 420,632.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,544.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,474.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">520,525.5 520,544.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">305,456.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">305,500 260,500</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">375,500 420,500</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,384.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">250,410 340,410 340,456.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">460,324.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">660,350 690,350 690,632.5 620,632.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="81,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">319.5,306.5</av:Point>
            <av:Size x:Key="ShapeSize">81,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">319.5,350 150,350 150,384.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">400.5,350 460,350</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">39,260</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">281,290 360,290 360,306.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">20,210 0,210 0,290 39,290</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_29">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">400,184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,166.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">265,210 220,210</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">335,210 400,210</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,87</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,138 300,166.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="708,1134">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,87</av:PointCollection>
            <x:Double x:Key="Width">694</x:Double>
            <x:Double x:Key="Height">936</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Dispatcher_1" sap:VirtualizedContainerService.HintSize="748,1214" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>